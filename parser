using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text.RegularExpressions;
using FuzzySharp;

public class FrenchDateParser
{
    public static readonly Dictionary<string, string> FrenchMonthMap = new Dictionary<string, string>
    {
        {"janvier", "01"}, {"janv", "01"},
        {"février", "02"}, {"fevr", "02"}, {"fevrier", "02"}, {"fév", "02"},
        {"mars", "03"},
        {"avril", "04"},
        {"mai", "05"},
        {"juin", "06"},
        {"juillet", "07"}, {"juil", "07"},
        {"août", "08"}, {"aout", "08"},
        {"septembre", "09"}, {"sept", "09"},
        {"octobre", "10"}, {"oct", "10"},
        {"novembre", "11"}, {"nov", "11"},
        {"décembre", "12"}, {"dec", "12"}, {"déc", "12"}
    };

    public static string GetBestMonthMatch(string input)
    {
        var bestMatch = FuzzySharp.Process.ExtractOne(input.ToLower(), FrenchMonthMap.Keys);
        return bestMatch?.Score > 70 ? FrenchMonthMap[bestMatch.Value] : null;
    }

    public static string ParseNoisyFrenchDate(string noisyInput)
    {
        if (string.IsNullOrWhiteSpace(noisyInput)) return null;

        // Clean the input
        string cleaned = Regex.Replace(noisyInput, @"[^\w\s-]", " ");
        cleaned = Regex.Replace(cleaned, @"\s+", " ").Trim();

        // Extract day, month string, year
        var parts = cleaned.Split(' ');
        if (parts.Length < 3) return null;

        string day = Regex.Match(parts[0], @"\d+").Value.PadLeft(2, '0');
        string rawMonth = parts[1];
        string year = parts[2];

        string month = GetBestMonthMatch(rawMonth);
        if (month == null || day.Length != 2 || year.Length != 4) return null;

        string finalDateStr = $"{day}-{month}-{year}";
        return finalDateStr;
    }
}
