
    static string ParseDateFromDigits(string input)
    {
        // Extract digits only
        string digitsOnly = string.Concat(Regex.Matches(input, @"\d"));
        //return !Regex.IsMatch(input, @"[a-zA-Z]");
        try
        {
            if (digitsOnly.Length == 4)
            {
                int day = int.Parse(digitsOnly.Substring(0, 1));
                int month = int.Parse(digitsOnly.Substring(1, 1));
                int year = 2000 + int.Parse(digitsOnly.Substring(2, 2));
                return new DateTime(year, month, day).ToString("yyyy-MM-dd");
            }
            else if (digitsOnly.Length == 6)
            {
                int day = int.Parse(digitsOnly.Substring(0, 2));
                int month = int.Parse(digitsOnly.Substring(2, 2));
                int year = 2000 + int.Parse(digitsOnly.Substring(4, 2));
                return new DateTime(year, month, day).ToString("yyyy-MM-dd");
            }
            else if (digitsOnly.Length == 8)
            {
                int day = int.Parse(digitsOnly.Substring(0, 2));
                int month = int.Parse(digitsOnly.Substring(2, 2));
                int year = int.Parse(digitsOnly.Substring(4, 4));
                return new DateTime(year, month, day).ToString("yyyy-MM-dd");
            }
            else
            {
                return "Invalid format";
            }
        }
        catch
        {
            return "Invalid date";
        }
    }
